МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ


КАФЕДРА ПРОГРАМНОЇ ІНЖЕНЕРІЇ




Звіт
з лабораторної роботи № 2 з дисципліни
Програмування під Android
   





Виконав:                                                                           Перевірив:
ст. гр. ПЗПІ-23-6                        				ст. викладач кафедри ПІ
Дубіна Станіслав Геннадійович                                     Сокорчук Ігор Петрович








Харків 2024

ЗАВДАННЯ

Розробити редактор, у якому з допомогою трьох регуляторів SeekBar встановлюється колір панелі.
Регулятори визначають RGB компоненти кольору панелі. Зовнішній вигляд екрану редактора повинен залежати від орієнтації пристроя. У портретній орієнтації пристроя, регулятори повинні знаходитися знизу від панелі, займати 1/3 висоти і розташовуватися на всю ширину екрану. У ланшафтній – праворуч від панелі і займати 1/3 ширини. Решту екрану повинна займати кольорова панель.


ХІД РОБОТИ

     Cтворимо новий проєкт та оберемо шаблон Empty Views Activity.
Зробимо розмітку для портретної та ландшафтної орієнтацій. Після цього відкриємо файл activity_main.xml, та почнімо писати розмітку для вікна, де буде відображатися колір:

1.  <View 
2.      android:id="@+id/panel" 
3.      android:background="@color/black"
4.      android:layout_width="match_parent" 
5.      android:layout_height="0dp"
6.      android:layout_weight="6.6"
7.      />

     Створимо 3 регулятори SeekBar, які відповідають за різні кольори, а саме: червоний, зелений та синій [ДОДАТОК А].
     Вирівняємо згідно умови завдання, так щоб регулятори займали одну третину екранного простору.
     Аналогічно до портретної розмітки створимо розмітку для ландшафтної орієнтації [ДОДАТОК Б].
     При відкриті MainActivity.java спершу створимо змінні для збереження кольорового коду:

1.  int red, green, blue;
     
     Знаходимо за id панель для відображення кольору:

      1.  View panel = findViewById(R.id.panel);

     Знаходимо за id кожен із регуляторів, за допомогою вбудованого метода onProgressChanged записуємо нове значення для змінної кольору. Змінюємо колір панелі на новий за допомогою описаної пізніше функції panel.setBackgroundColor:
     
1.  redSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
2.      @Override
3.      public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
4.          red = progress;
5.          panel.setBackgroundColor(getColor());
6.      }
7.  
8.      @Override
9.      public void onStartTrackingTouch(SeekBar seekBar) {}
10.  
11.     @Override
12.     public void onStopTrackingTouch(SeekBar seekBar) {}
13. }); 

     Аналогічно створимо методи для кожного із регуляторів.
Тепер переходимо до функції getColor. Ця функція перетворює три числові змінні на об’єкт коду:

1.  private int getColor() {
2.      return Color.rgb(red, green, blue);
3.  }


ВИСНОВКИ

     Під час лабораторної роботи було реалізовано адаптивний редактор кольорів із використанням трьох регуляторів (SeekBar) для налаштування RGB-компонентів та динамічного оновлення кольору панелі через елемент View залежно від орієнтації пристрою.
Відеозвіт на YouTube. URL: https://youtu.be/9HvjnBGbrWY


ВИКОРИСТАНІ ДЖЕРЕЛА

1. Документація SeekBar Android developers. URL: https://developer.android.com/reference/android/widget/SeekBar (дата звернення: 16.11.2024)

ДОДАТОК А

     Файл розмітки для портерної орієнтаціїї.

1  <?xml version="1.0" encoding="utf-8"?>
2  <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
3      xmlns:tools="http://schemas.android.com/tools"
4      android:id="@+id/main"
5      android:weightSum="10"
6      android:layout_width="match_parent"
7      android:layout_height="match_parent"
8      tools:context=".MainActivity"
9      android:orientation="vertical">
10
11     <View
12         android:id="@+id/panel"
13         android:background="@color/black"
14         android:layout_width="match_parent"
15         android:layout_height="0dp"
16         android:layout_weight="6.6"
17         />
18
19     <SeekBar
20         android:id="@+id/redSeekBar"
21         android:layout_width="match_parent"
22         android:layout_height="0dp"
23         android:layout_weight="1.1"
24         android:max="255"/>
25
26     <SeekBar
27         android:id="@+id/greenSeekBar"
28         android:layout_width="match_parent"
29         android:layout_height="0dp"
30         android:layout_weight="1.1"
31         android:max="255"/>
32
33     <SeekBar
34         android:id="@+id/blueSeekBar"
35         android:layout_width="match_parent"
36         android:layout_height="0dp"
37         android:layout_weight="1.1"
38         android:max="255"/>
39
40 </LinearLayout>

ДОДАТОК Б

Файл розмітки для ландшафтної орієнтаціїї.

1  <?xml version="1.0" encoding="utf-8"?>
2  <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
3      xmlns:tools="http://schemas.android.com/tools"
4      android:id="@+id/main"
5      android:layout_width="match_parent"
6      android:layout_height="match_parent"
7      android:orientation="horizontal"
8      android:weightSum="10"
9      tools:context=".MainActivity">
10
11     <View
12         android:id="@+id/panel"
13         android:layout_width="0dp"
14         android:layout_height="match_parent"
15         android:layout_weight="6.6"
16         android:background="@color/black" />
17
18     <LinearLayout
19         android:layout_width="0dp"
20         android:layout_height="match_parent"
21         android:layout_weight="3.3"
22         android:weightSum="3"
23         android:orientation="vertical">
24
25         <SeekBar
26             android:id="@+id/redSeekBar"
27             android:layout_width="match_parent"
28             android:layout_height="0dp"
29             android:layout_weight="1"
30             android:max="255" />
31
32         <SeekBar
33             android:id="@+id/greenSeekBar"
34             android:layout_width="match_parent"
35             android:layout_height="0dp"
36             android:layout_weight="1"
37             android:max="255" />
38
39         <SeekBar
40             android:id="@+id/blueSeekBar"
41             android:layout_width="match_parent"
42             android:layout_height="0dp"
43             android:layout_weight="1"
44             android:max="255" />
45     </LinearLayout>
46
47 </LinearLayout>

ДОДАТОК В

     Код програми у файлі MainActivity.java.

1  package nure.dubina.stanislav.lab_task_2;
2
3  import android.graphics.Color;
4  import android.os.Bundle;
5  import android.view.View;
6  import android.widget.SeekBar;
7
8  import androidx.appcompat.app.AppCompatActivity;
9
10 public class MainActivity extends AppCompatActivity {
11     int red, green, blue;
12
13     @Override
14     protected void onCreate(Bundle savedInstanceState) {
15         super.onCreate(savedInstanceState);
16         setContentView(R.layout.activity_main);
17         View panel = findViewById(R.id.panel);
18
19         SeekBar redSeekBar = findViewById(R.id.redSeekBar);
20         SeekBar greenSeekBar = findViewById(R.id.greenSeekBar);
21         SeekBar blueSeekBar = findViewById(R.id.blueSeekBar);
22
23         redSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
24             @Override
25             public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
26                 red = progress;
27                 panel.setBackgroundColor(getColor());
28             }
29
30             @Override
31             public void onStartTrackingTouch(SeekBar seekBar) {}
32
33             @Override
34             public void onStopTrackingTouch(SeekBar seekBar) {}
35         });
36
37         greenSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
38             @Override
39             public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
40                 green = progress;
41                 panel.setBackgroundColor(getColor());
42             }
43
44             @Override
45             public void onStartTrackingTouch(SeekBar seekBar) {}
46
47             @Override
48             public void onStopTrackingTouch(SeekBar seekBar) {}
49         });
50
51         blueSeekBar.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
52             @Override
53             public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
54                 blue = progress;
55                 panel.setBackgroundColor(getColor());
56             }
57
58             @Override
59             public void onStartTrackingTouch(SeekBar seekBar) {}
60
61             @Override
62             public void onStopTrackingTouch(SeekBar seekBar) {}
63         });
64     }
65
66     private int getColor() {
67         return Color.rgb(red, green, blue);
68     }
69 }






2






